"""
Задание 1. Написать программу, которая будет складывать, вычитать,
умножать или делить два числа. Числа и знак операции вводятся пользователем.
После выполнения вычисления программа не должна завершаться, а должна
запрашивать новые данные для вычислений. Завершение программы должно
выполняться при вводе символа '0' в качестве знака операции. Если пользователь
вводит неверный знак (не '0', '+', '-', '*', '/'), то программа должна
сообщать ему об ошибке и снова запрашивать знак операции.
Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.
Подсказка:
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, / - ШАГ РЕКУРСИИ
- условие завершения рекурсии - введена операция 0 - БАЗОВЫЙ СЛУЧАЙ
Решите через рекурсию. В задании нельзя применять циклы.
Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 214
Введите второе число: 234
Ваш результат 448
Введите операцию (+, -, *, / или 0 для выхода): -
Введите первое число: вп
Вы вместо трехзначного числа ввели строку (((. Исправьтесь
Введите операцию (+, -, *, / или 0 для выхода):
"""


def operations():
    func = input("Enter operation (+, -, *, / or 0 for exit):")
    if func == "0":
        return print("You have been exit from the program!")
    elif func != 0:
        if func == "+":
            print(f"Result: {el1 + el2}")
            operations()
        elif func == "-":
            print(f"Result: {el1 - el2}")
            operations()
        elif func == "*":
            print(f"Result: {el1 * el2}")
            operations()
        elif func == "/":
            print(f"Result: {round((el1 / el2), 3)}")
            operations()


try:
    el1 = int(input(f"Enter first number:"))
    el2 = int(input(f"Enter second number:"))
except ValueError:
    print("Is not an integer, try again.")
    el1 = int(input(f"Enter first number:"))
    el2 = int(input(f"Enter second number:"))
else:
    print("All right!")
finally:
    operations()
